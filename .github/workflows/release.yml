on:
  push:
    tags:
      - 'v[0-9]+.*'
jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
  release_assets:
      name: Release assets
      needs: create_release
      runs-on: ${{ matrix.config.os }}
      strategy:
        matrix:
          config:
            - os: macos-latest
            - os: windows-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Build with Gradle
        run: ./gradlew packageMyApp
      - name: Upload idL Windows artifact
        if: matrix.config.os == 'windows-latest' 
        uses: actions/upload-artifact@v1.0.0
        with:
          name: idL-installer.exe
          path: build/idL/idL.exe
      - name: Upload macOs artifact
        if: matrix.config.os == 'macos-latest'
        uses: actions/upload-artifact@v1.0.0
        with:
          name: idL.app
          path: build/idL/idL.app
      - name: Upload release assets Windows
        if: matrix.config.os == 'windows-latest' 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: idL-${{ github.ref }}.exe
          asset_path: build/idL_*.exe
          asset_content_type: application/octet-stream
      - name: Upload release assets macOs
        if: matrix.config.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: idL-${{ github.ref }}.dmg
          asset_path: build/idL-*.dmg
          asset_content_type: application/octet-stream
